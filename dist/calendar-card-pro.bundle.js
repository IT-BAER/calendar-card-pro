!function(){"use strict";
/**
   * Calendar Card Pro for Home Assistant
   *
   * @license MIT
   * @copyright Copyright (c) 2025 Alex Pfau
   * @version 1.2.0
   *
   * This project uses LitElement and related libraries which are released under the BSD-3-Clause license.
   * Copyright 2019 Google LLC
   */class t extends HTMLElement{static get DEFAULT_CONFIG(){return{entities:[],days_to_show:3,max_events_to_show:void 0,show_past_events:!1,update_interval:43200,language:void 0,time_24h:!0,show_end_time:!0,show_month:!0,show_location:!0,remove_location_country:!0,title:"",background_color:"var(--ha-card-background)",row_spacing:"5px",additional_card_spacing:"0px",vertical_line_width:"2px",vertical_line_color:"#03a9f4",horizontal_line_width:"0px",horizontal_line_color:"var(--secondary-text-color)",title_font_size:"20px",weekday_font_size:"14px",day_font_size:"26px",month_font_size:"12px",event_font_size:"14px",time_font_size:"12px",location_font_size:"12px",time_location_icon_size:"16px",title_color:"var(--primary-text-color)",weekday_color:"var(--primary-text-color)",day_color:"var(--primary-text-color)",month_color:"var(--primary-text-color)",event_color:"var(--primary-text-color)",time_color:"var(--secondary-text-color)",location_color:"var(--secondary-text-color)",tap_action:{action:"expand"},hold_action:{action:"none"}}}static get TRANSLATIONS(){return{en:{daysOfWeek:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],fullDaysOfWeek:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],months:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],allDay:"all-day",multiDay:"until",at:"at",noEvents:"No upcoming events",loading:"Loading calendar events...",error:"Error: Calendar entity not found or improperly configured"},de:{daysOfWeek:["So","Mo","Di","Mi","Do","Fr","Sa"],fullDaysOfWeek:["Sonntag","Montag","Dienstag","Mittwoch","Donnerstag","Freitag","Samstag"],months:["Jan","Feb","Mär","Apr","Mai","Jun","Jul","Aug","Sep","Okt","Nov","Dez"],allDay:"ganztägig",multiDay:"bis",at:"um",noEvents:"Keine anstehenden Termine",loading:"Kalendereinträge werden geladen...",error:"Fehler: Kalender-Entity nicht gefunden oder falsch konfiguriert"}}}static get PERFORMANCE_THRESHOLDS(){return{RENDER_TIME:100,CHUNK_SIZE:10,RENDER_DELAY:50}}static get CHUNK_SIZE(){return 10}static get RENDER_DELAY(){return 50}static get DATE_OBJECTS(){return this._dateObjects||(this._dateObjects={now:new Date,todayStart:new Date,todayEnd:new Date}),this._dateObjects}static findCalendarEntity(t){return Object.keys(t.states).find((t=>t.startsWith("calendar.")))}static getStubConfig(t){const e=this.findCalendarEntity(t);return{type:"custom:calendar-card-pro",entities:e?[e]:[],days_to_show:3,show_location:!0,_description:e?void 0:"A calendar card that displays events from multiple calendars with individual styling. Add a calendar integration to Home Assistant to use this card."}}static get name(){return"Calendar Card Pro"}constructor(){super(),this.attachShadow({mode:"open"}),this.instanceId=Math.random().toString(36).substring(2,15),this.initializeState(),this.performanceMetrics={renderTime:[],eventCount:0,lastUpdate:Date.now()},this.debouncedUpdate=this.debounce((()=>this.updateEvents()),300),this.memoizedFormatTime=this.memoize(this.formatTime),this.memoizedFormatLocation=this.memoize(this.formatLocation),this.cleanupInterval=setInterval((()=>this.cleanupCache()),36e5)}disconnectedCallback(){clearInterval(this.cleanupInterval),this.cleanup()}initializeState(){this.config={},this.events=[],this._hass=null,this.rendered=!1,this.touchState={touchStartY:0,touchStartX:0,holdTimer:null,holdTriggered:!1},this.isLoading=!0,this.isExpanded=!1}cleanup(){this.renderTimeout&&clearTimeout(this.renderTimeout),this.memoizedFormatTime.cache?.clear(),this.memoizedFormatLocation.cache?.clear()}cleanupCache(){const t=Date.now(),e=`calendar_${this.config.entity}`;for(let n=0;n<localStorage.length;n++){const i=localStorage.key(n);if(i?.startsWith(e))try{t-JSON.parse(localStorage.getItem(i)).timestamp>864e5&&localStorage.removeItem(i)}catch(t){localStorage.removeItem(i)}}}get translations(){const e=this.config.language||(this._hass?.language||"en").split("-")[0].toLowerCase();return t.TRANSLATIONS[e]||t.TRANSLATIONS.en}set hass(t){const e=this._hass;this._hass=t;this.config.entities.some((n=>!e||e.states[n]?.state!==t.states[n]?.state))&&this.updateEvents()}setConfig(e){const n=this.config;this.config={...t.DEFAULT_CONFIG,...e},this.config.entities=this.normalizeEntities(this.config.entities),this.hasConfigChanged(n,this.config)?(this.invalidateCache(),this.updateEvents(!0)):this.renderCard()}normalizeEntities(t){return Array.isArray(t)?t.map((t=>"string"==typeof t?{entity:t,color:"var(--primary-text-color)"}:"object"==typeof t&&t.entity?{entity:t.entity,color:t.color||"var(--primary-text-color)"}:null)).filter(Boolean):[]}hasEntitiesChanged(t,e){return t.length!==e.length||t.some(((t,n)=>t!==e[n]))}hasConfigChanged(t,e){if(!t)return!0;return["entities","days_to_show","show_past_events","update_interval"].some((n=>JSON.stringify(t[n])!==JSON.stringify(e[n])))}invalidateCache(){this.getAllCacheKeys().forEach((t=>localStorage.removeItem(t)))}getAllCacheKeys(){const t=[],e=this.getBaseCacheKey(),n=new Date,i=new Date(n);return i.setDate(i.getDate()-1),[n,i].forEach((n=>{t.push(`${e}_${n.toDateString()}`)})),t}getCacheKey(){return`${this.getBaseCacheKey()}_${(new Date).toDateString()}`}getBaseCacheKey(){const{entities:t,days_to_show:e,show_past_events:n}=this.config,i=this.hashConfig(this.config);return`calendar_${this.instanceId}_${t.join("_")}_${e}_${n}_${i}`}hashConfig(t){return btoa(JSON.stringify(t)).substring(0,8)}isValidState(){return!(!this._hass||!this.config.entities.length)}async updateEvents(t=!1){if(!this.isValidState())return;const e=!t&&this.getCachedEvents();if(e)return this.events=e,void this.renderCard();this.isLoading=!0,this.renderCard();try{const t=await this.fetchEvents();this.events=t,this.cacheEvents(t)}catch(t){if(0===this.events.length){const t=await this.fetchTodayEvents();this.events=t||[]}}finally{this.isLoading=!1,this.renderCard()}}async fetchEvents(){const t=this.getTimeWindow(),e=[];for(const n of this.config.entities)try{const i=(await this._hass.callApi("GET",`calendars/${n.entity}?start=${t.start.toISOString()}&end=${t.end.toISOString()}`)).map((t=>({...t,_entityConfig:n})));e.push(...i)}catch(t){console.warn(`Calendar-Card-Pro: Failed to fetch events for ${n.entity}`,t)}return e}async fetchTodayEvents(){try{const t=new Date,e=new Date(t.getFullYear(),t.getMonth(),t.getDate()),n=new Date(e);n.setHours(23,59,59,999);return await this._hass.callApi("GET",`calendars/${this.config.entity}?start=${e.toISOString()}&end=${n.toISOString()}`)}catch{return null}}updateDateObjects(){const e=t.DATE_OBJECTS;e.now=new Date,e.todayStart.setTime(e.now),e.todayStart.setHours(0,0,0,0),e.todayEnd.setTime(e.todayStart.getTime()),e.todayEnd.setHours(23,59,59,999)}getCachedEvents(){const t=this.getCacheKey();try{const e=JSON.parse(localStorage.getItem(t)),n=1e3*(this.config.update_interval||300);if(e&&Date.now()-e.timestamp<n)return sessionStorage.setItem(t,"used"),e.events}catch(t){console.warn("Calendar-Card-Pro: Failed to retrieve cached events:",t)}return null}cacheEvents(t){const e=this.getCacheKey();try{return localStorage.setItem(e,JSON.stringify({events:t,timestamp:Date.now()})),!0}catch(t){return!1}}_handleAction(t,e){if(!this._hass||!e)return;const n={"more-info":()=>this.fireMoreInfo(),navigate:()=>this.handleNavigation(e),"call-service":()=>this.callService(e),url:()=>this.openUrl(e),expand:()=>this.toggleExpanded(),none:()=>{}}[e.action];n&&n()}fireMoreInfo(){const t=Array.isArray(this.config.entities)?"string"==typeof this.config.entities[0]?this.config.entities[0]:this.config.entities[0].entity:this.config.entities,e=new Event("hass-more-info",{bubbles:!0,composed:!0});e.detail={entityId:t},this.dispatchEvent(e)}handleNavigation(t){t.navigation_path&&(window.history.pushState(null,"",t.navigation_path),window.dispatchEvent(new Event("location-changed")))}callService(t){if(t.service){const[e,n]=t.service.split(".");this._hass.callService(e,n,t.service_data||{})}}openUrl(t){t.url_path&&window.open(t.url_path,t.open_tab||"_blank")}toggleExpanded(){this.config.max_events_to_show&&(this.isExpanded=!this.isExpanded,this.renderCard())}setupEventListeners(){const t=this.shadowRoot.querySelector(".card-container");if(!t)return;let e,n=!1;t.addEventListener("pointerdown",(t=>{n=!1,e=window.setTimeout((()=>{n=!0,this.config.hold_action&&this._handleAction(t,this.config.hold_action)}),500)})),t.addEventListener("pointerup",(t=>{clearTimeout(e),!n&&this.config.tap_action&&this._handleAction(t,this.config.tap_action)})),t.addEventListener("pointercancel",(()=>{clearTimeout(e)}))}groupEventsByDay(){const t={},e=new Date,n=new Date(e.getFullYear(),e.getMonth(),e.getDate()),i=new Date(n);i.setHours(23,59,59,999);const a=this.events.filter((t=>{if(!t?.start||!t?.end)return!1;const a=new Date(t.start.dateTime||t.start.date),o=new Date(t.end.dateTime||t.end.date);if(!a||!o)return!1;const s=!t.start.dateTime;return!!(a>=n&&a<=i||a>i)&&!(!this.config.show_past_events&&!s&&o<e)}));if(0===a.length)return[];a.forEach((e=>{const n=new Date(e.start.dateTime||e.start.date),i=n.toISOString().split("T")[0];t[i]||(t[i]={weekday:this.translations.daysOfWeek[n.getDay()],day:n.getDate(),month:this.translations.months[n.getMonth()],timestamp:n.getTime(),events:[]}),t[i].events.push({summary:e.summary||"",time:this.formatEventTime(e),location:this.config.show_location?this.formatLocation(e.location):"",start:e.start,end:e.end,_entityConfig:e._entityConfig})})),Object.values(t).forEach((t=>{t.events.sort(((t,e)=>new Date(t.start.dateTime||t.start.date)-new Date(e.start.dateTime||e.start.date)))}));let o=Object.values(t).sort(((t,e)=>t.timestamp-e.timestamp)).slice(0,this.config.days_to_show||3);if(this.config.max_events_to_show&&!this.isExpanded){let t=0;o=o.filter((e=>!(t>=this.config.max_events_to_show)&&(t+=e.events.length,!0)))}return o}getTimeWindow(){const t=new Date,e=new Date(t.getFullYear(),t.getMonth(),t.getDate()),n=new Date(e),i=parseInt(this.config.days_to_show)||3;return n.setDate(e.getDate()+i),n.setHours(23,59,59,999),{start:e,end:n}}formatEventTime(t){const e=new Date(t.start.dateTime||t.start.date),n=new Date(t.end.dateTime||t.end.date);if(!t.start.dateTime){const t=new Date(n);return t.setDate(t.getDate()-1),e.toDateString()!==t.toDateString()?this.formatMultiDayAllDayTime(t):this.translations.allDay}return e.toDateString()!==n.toDateString()?this.formatMultiDayTime(e,n):this.formatSingleDayTime(e,n)}formatMultiDayAllDayTime(t){const e=t.getDate(),n=this.translations.months[t.getMonth()],i="de"===this.config.language?`${e}.`:e;return`${this.translations.allDay}, ${this.translations.multiDay} ${i} ${n}`}formatMultiDayTime(t,e){const n=e.getDate(),i=this.translations.months[e.getMonth()],a=this.translations.fullDaysOfWeek[e.getDay()],o="de"===this.config.language?`${n}.`:n,s=this.formatTime(t),r=this.formatTime(e);return[s,this.translations.multiDay,a+",",o,i,this.translations.at,r].join(" ")}formatSingleDayTime(t,e){return this.config.show_end_time?`${this.formatTime(t)} - ${this.formatTime(e)}`:this.formatTime(t)}formatTime(t){let e=t.getHours(),n=t.getMinutes();if(!this.config.time_24h){const t=e>=12?"PM":"AM";return e=e%12||12,`${e}:${n.toString().padStart(2,"0")} ${t}`}return`${e}:${n.toString().padStart(2,"0")}`}static get COUNTRY_NAMES(){if(!this._countryNames){this._countryNames=new Set(["Germany","Deutschland","Austria","Österreich","Switzerland","Schweiz","United States","United States of America","USA","United Kingdom","Great Britain","France","Italy","Italia","Spain","España","Netherlands","Nederland"]);try{const t=new Intl.DisplayNames(["en"],{type:"region",fallback:"none"});["DE","AT","CH","US","GB","FR","IT","ES","NL","BE","DK","SE","NO","FI","PT","IE","LU","PL","CA","JP","AU","NZ","BR","RU","CN","IN"].forEach((e=>{try{const n=t.of(e);n&&this._countryNames.add(n)}catch{}}))}catch{}}return this._countryNames}formatLocation(e){if(!e||!this.config.remove_location_country)return e;const n=e.trim(),i=t.COUNTRY_NAMES,a=n.split(",").map((t=>t.trim()));if(a.length>0&&i.has(a[a.length-1]))return a.pop(),a.join(", ");const o=n.split(/\s+/);return o.length>0&&i.has(o[o.length-1])?(o.pop(),o.join(" ")):n}async renderProgressively(e){if(!e.length)return'<div class="no-events">No upcoming events</div>';const n=document.createDocumentFragment(),i=async a=>{const o=e.slice(a,a+t.CHUNK_SIZE);o.length&&(o.forEach((t=>{if(0===t.events.length)return;const e=document.createElement("table");e.innerHTML=this.generateDayContent(t),n.appendChild(e)})),a+t.CHUNK_SIZE<e.length&&(await new Promise((e=>setTimeout(e,t.RENDER_DELAY))),await i(a+t.CHUNK_SIZE)))};return await i(0),n}async renderCard(){const t=this.beginPerfMetrics();if(!this.isValidState())return this.renderError("error"),void this.endPerfMetrics(t);if(this.isLoading)return this.renderError("loading"),void this.endPerfMetrics(t);const e=this.groupEventsByDay();if(0===e.length)return this.renderError("empty"),void this.endPerfMetrics(t);const n=document.createElement("div");n.className="card-container";const i=document.createElement("div");if(i.className="card-content",this.config.title){const t=document.createElement("div");t.className="title",t.textContent=this.config.title,i.appendChild(t)}const a=await this.renderProgressively(e);i.appendChild(a),n.appendChild(i);const o=document.createElement("style");for(o.textContent=this.getStyles();this.shadowRoot.firstChild;)this.shadowRoot.removeChild(this.shadowRoot.firstChild);this.shadowRoot.appendChild(o),this.shadowRoot.appendChild(n),this.setupEventListeners(),this.endPerfMetrics(t)}renderError(t){if("loading"===t){const t=document.createElement("div");t.className="card-container";const e=document.createElement("div");e.className="card-content",e.innerHTML=`\n        <div style="text-align: center; color: var(--primary-text-color);">\n          ${this.translations.loading}\n        </div>`,t.appendChild(e);const n=document.createElement("style");for(n.textContent=this.getStyles();this.shadowRoot.firstChild;)this.shadowRoot.removeChild(this.shadowRoot.firstChild);return this.shadowRoot.appendChild(n),void this.shadowRoot.appendChild(t)}if("empty"===t){const t=new Date,e={weekday:this.translations.daysOfWeek[t.getDay()],day:t.getDate(),month:this.translations.months[t.getMonth()],events:[{summary:this.translations.noEvents,time:"",location:"",_entityConfig:{color:"var(--secondary-text-color)"}}]},n=document.createElement("div");n.className="card-container";const i=document.createElement("div");i.className="card-content",i.innerHTML=`\n        <table>\n          <tr>\n            <td class="date" rowspan="1">\n              <div class="date-content">\n                <div class="weekday">${e.weekday}</div>\n                <div class="day">${e.day}</div>\n                ${this.config.show_month?`<div class="month">${e.month}</div>`:""}\n              </div>\n            </td>\n            <td class="event">\n              <div class="event-content">\n                <div class="event-title" style="color: ${e.events[0]._entityConfig.color}">\n                  ${e.events[0].summary}\n                </div>\n              </div>\n            </td>\n          </tr>\n        </table>`,n.appendChild(i);const a=document.createElement("style");for(a.textContent=this.getStyles();this.shadowRoot.firstChild;)this.shadowRoot.removeChild(this.shadowRoot.firstChild);return this.shadowRoot.appendChild(a),void this.shadowRoot.appendChild(n)}const e={error:`<p style="color: var(--error-color, red);">${this.translations.error}</p>`,loading:`<p style="color: var(--secondary-text-color);">${this.translations.loading}</p>`};this.shadowRoot.innerHTML=`\n      <div class="card-content">\n        ${e[t]}\n      </div>\n    `}generateCalendarContent(t){return t.length?(parseFloat(this.config.day_font_size),parseFloat(this.config.row_spacing),t.map((t=>{if(0===t.events.length)return"";return`<table>${t.events.map(((e,n)=>`\n        <tr>\n          ${0===n?`\n            <td class="date" rowspan="${t.events.length}">\n              <div class="date-content">\n                <div class="weekday">${t.weekday}</div>\n                <div class="day">${t.day}</div>\n                ${this.config.show_month?`<div class="month">${t.month}</div>`:""}\n              </div>\n            </td>\n          `:""}\n          <td class="event">\n            <div class="event-content">\n              <div class="event-title">${e.summary}</div>\n              <div class="time-location">\n                <div class="time">\n                  <ha-icon icon="hass:clock-outline"></ha-icon>\n                  <span>${e.time}</span>\n                </div>\n                ${e.location?`\n                  <div class="location">\n                    <ha-icon icon="hass:map-marker"></ha-icon>\n                    <span>${e.location}</span>\n                  </div>\n                `:""}\n              </div>\n            </div>\n          </td>\n        </tr>\n      `)).join("")}</table>`})).join("")):'<div class="no-events">No upcoming events</div>'}generateDayContent(t){return t.events.map(((e,n)=>`\n      <tr>\n        ${0===n?`\n          <td class="date" rowspan="${t.events.length}">\n            <div class="date-content">\n              <div class="weekday">${t.weekday}</div>\n              <div class="day">${t.day}</div>\n              ${this.config.show_month?`<div class="month">${t.month}</div>`:""}\n            </div>\n          </td>\n        `:""}\n        <td class="event">\n          <div class="event-content">\n            <div class="event-title" style="color: ${e._entityConfig?.color}">${e.summary}</div>\n            <div class="time-location">\n              <div class="time">\n                <ha-icon icon="hass:clock-outline"></ha-icon>\n                <span>${e.time}</span>\n              </div>\n              ${e.location?`\n                <div class="location">\n                  <ha-icon icon="hass:map-marker"></ha-icon>\n                  <span>${e.location}</span>\n                </div>\n              `:""}\n            </div>\n          </div>\n        </td>\n      </tr>\n    `)).join("")}getStyles(){return`\n      ${`\n      :host {\n        --card-font-size-title: ${this.config.title_font_size};\n        --card-font-size-weekday: ${this.config.weekday_font_size};\n        --card-font-size-day: ${this.config.day_font_size};\n        --card-font-size-month: ${this.config.month_font_size};\n        --card-font-size-event: ${this.config.event_font_size};\n        --card-font-size-time: ${this.config.time_font_size};\n        --card-font-size-location: ${this.config.location_font_size};\n        --card-color-title: ${this.config.title_color};\n        --card-color-weekday: ${this.config.weekday_color};\n        --card-color-day: ${this.config.day_color};\n        --card-color-month: ${this.config.month_color};\n        --card-color-event: ${this.config.event_color};\n        --card-color-time: ${this.config.time_color};\n        --card-color-location: ${this.config.location_color};\n        --card-line-color-vertical: ${this.config.vertical_line_color};\n        --card-line-color-horizontal: ${this.config.horizontal_line_color};\n        --card-line-width-vertical: ${this.config.vertical_line_width};\n        --card-line-width-horizontal: ${this.config.horizontal_line_width};\n        --card-spacing-row: ${this.config.row_spacing};\n        --card-spacing-additional: ${this.config.additional_card_spacing};\n        --card-icon-size: ${this.config.time_location_icon_size};\n        --card-date-column-width: ${1.75*parseFloat(this.config.day_font_size)}px;\n        --card-custom-background: ${this.config.background_color};\n      }\n    `}\n      \n      :host {\n        display: block;\n      }\n      .card-container {\n        cursor: pointer;\n        width: 100%;\n        height: 100%;\n      }\n      .card-content {\n        background: var(--card-custom-background, var(--card-background-color, #FFF));\n        border: var(--ha-card-border-width, 1px) solid var(--ha-card-border-color, var(--divider-color));\n        border-radius: var(--ha-card-border-radius, 10px);\n        padding: 16px;\n        padding-top: calc(16px + var(--card-spacing-additional));\n        padding-bottom: calc(16px + var(--card-spacing-additional));\n      }\n      .title {\n        font-size: var(--card-font-size-title);\n        line-height: var(--card-font-size-title);\n        font-weight: 500;\n        color: var(--card-color-title);\n        margin-bottom: 16px;\n      }\n      ha-icon {\n        margin-right: 4px;\n        --mdc-icon-size: var(--card-icon-size);\n        vertical-align: middle;\n        position: relative;\n      }\n      table {\n        width: 100%;\n        table-layout: fixed;\n        border-spacing: 0;\n        margin-bottom: var(--card-spacing-row);\n        border-bottom: var(--card-line-width-horizontal) solid var(--card-line-color-horizontal);\n        padding-bottom: var(--card-spacing-row);\n      }\n      .date {\n        width: var(--card-date-column-width);\n        text-align: center;\n        padding-right: 12px;\n        border-right: var(--card-line-width-vertical) solid var(--card-line-color-vertical);\n      }\n      .weekday {\n        font-size: var(--card-font-size-weekday);\n        line-height: var(--card-font-size-weekday);\n        color: var(--card-color-weekday);\n      }\n      .day {\n        font-size: var(--card-font-size-day);\n        line-height: var(--card-font-size-day);\n        font-weight: 500;\n        color: var(--card-color-day);\n      }\n      .month {\n        font-size: var(--card-font-size-month);\n        line-height: var(--card-font-size-month);\n        text-transform: uppercase;\n        color: var(--card-color-month);\n      }\n      .event {\n        padding-left: 12px;\n      }\n      .event-title {\n        font-size: var(--card-font-size-event);\n        font-weight: 500;\n        color: var(--card-color-event);\n      }\n      .time-location {\n        display: flex;\n        flex-direction: column;\n        margin-top: 0px;\n      }\n      .time, .location {\n        display: flex;\n        align-items: center;\n        line-height: 1.2;\n      }\n      .time {\n        font-size: var(--card-font-size-time);\n        color: var(--card-color-time);\n      }\n      .location {\n        font-size: var(--card-font-size-location);\n        color: var(--card-color-location);\n        margin-top: 2px;\n      }\n      table:last-of-type {\n        margin-bottom: 0;\n        border-bottom: 0;\n        padding-bottom: 0;\n      }\n      .no-events {\n        text-align: center;\n        color: var(--secondary-text-color);\n        font-style: italic;\n        padding: 16px;\n      }\n    `}handleAction(t,e){if(!this._hass||!e)return;const n={"more-info":()=>this.fireMoreInfo(),navigate:()=>this.handleNavigation(e),"call-service":()=>this.callService(e),url:()=>this.openUrl(e)}[e.action];n&&n()}fireMoreInfo(){const t=new Event("hass-more-info",{bubbles:!0,composed:!0});t.detail={entityId:this.config.entities[0].entity||this.config.entities[0]},this.dispatchEvent(t)}handleNavigation(t){t.navigation_path&&(window.history.pushState(null,"",t.navigation_path),window.dispatchEvent(new Event("location-changed")))}callService(t){if(t.service){const[e,n]=t.service.split(".");this._hass.callService(e,n,t.service_data||{})}}openUrl(t){t.url_path&&window.open(t.url_path,t.open_tab||"_blank")}debounce(t,e){let n;return function(...i){clearTimeout(n),n=setTimeout((()=>{clearTimeout(n),t(...i)}),e)}}memoize(t){const e=new Map;return(...n)=>{const i=JSON.stringify(n);if(e.has(i))return e.get(i);const a=t.apply(this,n);return e.set(i,a),a}}beginPerfMetrics(){return{startTime:performance.now(),eventCount:this.events.length}}endPerfMetrics(e){const n=performance.now()-e.startTime;this.performanceMetrics.renderTime.push(n),this.performanceMetrics.eventCount=e.eventCount,this.performanceMetrics.renderTime.length>10&&this.performanceMetrics.renderTime.shift();const i=this.getAverageRenderTime();i>t.PERFORMANCE_THRESHOLDS.RENDER_TIME&&console.warn("Calendar-Card-Pro: Poor rendering performance detected",{averageRenderTime:i,eventCount:this.performanceMetrics.eventCount})}getAverageRenderTime(){if(!this.performanceMetrics.renderTime.length)return 0;return this.performanceMetrics.renderTime.reduce(((t,e)=>t+e),0)/this.performanceMetrics.renderTime.length}}customElements.define("calendar-card-pro",t),window.customCards=window.customCards||[],window.customCards.push({type:"calendar-card-pro",name:"Calendar Card Pro",preview:!0,description:"A calendar card that supports multiple calendars with individual styling.",documentationURL:"https://github.com/alexpfau/calendar-card-pro"})}();
